[package]
name = "gnostr-bins"
version = "0.0.62-rc4"
edition = "2021"
authors = ["gnostr admin@gnostr.org", "Mike Dilger <mike@mikedilger.com>"]
description = "Command line tools for nostr"
repository = "https://github.com/gnostr-org/gnostr-bins"
documentation = "https://github.com/gnostr-org/gnostr-bins"
keywords = ["gnostr", "nostr"]
license = "MIT"

[dependencies]
ascii = "1.1.0"
base64 = "0.21"
bech32 = "0.11"
bitcoin_hashes = "0.14.0"
cfg-if = { git = "https://github.com/rust-lang/cfg-if.git", version = "1.0.0" }
clap = { version = "4.5.18", features = ["derive"] }
colorful = "0.2"
dirs = "5.0"
futures = "0.3.30"
futures-util = "0.3"
getopts = "0.2.21"
git2 = "0.19.0"
hex = "0.4"
http = "1.1"
k256 = { version = "0.13", features = [ "schnorr", "ecdh" ] }
lazy_static = "1.4"
log = "0.4.22"
nostr-types = { version = "0.8.0-unstable", path = "src/types" }
num-bigint = "0.4.6"
rand = "0.8"
rand_core = "0.6"
reqwest = { version = "0.11", default-features = false, features = [ "blocking", "json", "rustls-tls-webpki-roots"  ] }
rpassword = "7.2"
secp256k1 = { version = "0.29", features = [ "hashes", "global-context", "rand-std", "serde" ] }
serde = { version = "1.0", features = [ "derive" ] }
serde_json = "1.0"
sha256 = "1.5.0"
structopt = "0.3.26"
tokio = { version = "1", features = ["full"] }
tokio-tungstenite = { version = "0.21", features = [ "connect", "handshake", "rustls-tls-webpki-roots" ] }
tungstenite = { version = "0.21", features = [ "rustls-tls-webpki-roots" ] }
zeroize = "1.5"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "gnostr-org/homebrew-gnostr-org"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Whether to install an updater program
install-updater = true
